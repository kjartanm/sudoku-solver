// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ortools/constraint_solver/routing_enums.proto

#include "ortools/constraint_solver/routing_enums.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace operations_research {
class FirstSolutionStrategyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FirstSolutionStrategy> _instance;
} _FirstSolutionStrategy_default_instance_;
class LocalSearchMetaheuristicDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LocalSearchMetaheuristic> _instance;
} _LocalSearchMetaheuristic_default_instance_;
}  // namespace operations_research
static void InitDefaultsscc_info_FirstSolutionStrategy_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::operations_research::_FirstSolutionStrategy_default_instance_;
    new (ptr) ::operations_research::FirstSolutionStrategy();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::operations_research::FirstSolutionStrategy::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FirstSolutionStrategy_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FirstSolutionStrategy_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto}, {}};

static void InitDefaultsscc_info_LocalSearchMetaheuristic_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::operations_research::_LocalSearchMetaheuristic_default_instance_;
    new (ptr) ::operations_research::LocalSearchMetaheuristic();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::operations_research::LocalSearchMetaheuristic::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LocalSearchMetaheuristic_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LocalSearchMetaheuristic_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::operations_research::FirstSolutionStrategy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchMetaheuristic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::operations_research::FirstSolutionStrategy)},
  { 5, -1, sizeof(::operations_research::LocalSearchMetaheuristic)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::operations_research::_FirstSolutionStrategy_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::operations_research::_LocalSearchMetaheuristic_default_instance_),
};

const char descriptor_table_protodef_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n-ortools/constraint_solver/routing_enum"
  "s.proto\022\023operations_research\"\214\003\n\025FirstSo"
  "lutionStrategy\"\362\002\n\005Value\022\t\n\005UNSET\020\000\022\r\n\tA"
  "UTOMATIC\020\017\022\025\n\021PATH_CHEAPEST_ARC\020\003\022\035\n\031PAT"
  "H_MOST_CONSTRAINED_ARC\020\004\022\026\n\022EVALUATOR_ST"
  "RATEGY\020\005\022\013\n\007SAVINGS\020\n\022\t\n\005SWEEP\020\013\022\020\n\014CHRI"
  "STOFIDES\020\r\022\023\n\017ALL_UNPERFORMED\020\006\022\022\n\016BEST_"
  "INSERTION\020\007\022\037\n\033PARALLEL_CHEAPEST_INSERTI"
  "ON\020\010\022!\n\035SEQUENTIAL_CHEAPEST_INSERTION\020\016\022"
  "\034\n\030LOCAL_CHEAPEST_INSERTION\020\t\022\027\n\023GLOBAL_"
  "CHEAPEST_ARC\020\001\022\026\n\022LOCAL_CHEAPEST_ARC\020\002\022\033"
  "\n\027FIRST_UNBOUND_MIN_VALUE\020\014\"\256\001\n\030LocalSea"
  "rchMetaheuristic\"\221\001\n\005Value\022\t\n\005UNSET\020\000\022\r\n"
  "\tAUTOMATIC\020\006\022\022\n\016GREEDY_DESCENT\020\001\022\027\n\023GUID"
  "ED_LOCAL_SEARCH\020\002\022\027\n\023SIMULATED_ANNEALING"
  "\020\003\022\017\n\013TABU_SEARCH\020\004\022\027\n\023GENERIC_TABU_SEAR"
  "CH\020\005BI\n#com.google.ortools.constraintsol"
  "verP\001\252\002\037Google.OrTools.ConstraintSolverb"
  "\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto_sccs[2] = {
  &scc_info_FirstSolutionStrategy_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto.base,
  &scc_info_LocalSearchMetaheuristic_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto = {
  false, false, descriptor_table_protodef_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto, "ortools/constraint_solver/routing_enums.proto", 727,
  &descriptor_table_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto_once, descriptor_table_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto_sccs, descriptor_table_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto::offsets,
  file_level_metadata_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto, 2, file_level_enum_descriptors_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto, file_level_service_descriptors_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto)), true);
namespace operations_research {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FirstSolutionStrategy_Value_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto);
  return file_level_enum_descriptors_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto[0];
}
bool FirstSolutionStrategy_Value_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr FirstSolutionStrategy_Value FirstSolutionStrategy::UNSET;
constexpr FirstSolutionStrategy_Value FirstSolutionStrategy::AUTOMATIC;
constexpr FirstSolutionStrategy_Value FirstSolutionStrategy::PATH_CHEAPEST_ARC;
constexpr FirstSolutionStrategy_Value FirstSolutionStrategy::PATH_MOST_CONSTRAINED_ARC;
constexpr FirstSolutionStrategy_Value FirstSolutionStrategy::EVALUATOR_STRATEGY;
constexpr FirstSolutionStrategy_Value FirstSolutionStrategy::SAVINGS;
constexpr FirstSolutionStrategy_Value FirstSolutionStrategy::SWEEP;
constexpr FirstSolutionStrategy_Value FirstSolutionStrategy::CHRISTOFIDES;
constexpr FirstSolutionStrategy_Value FirstSolutionStrategy::ALL_UNPERFORMED;
constexpr FirstSolutionStrategy_Value FirstSolutionStrategy::BEST_INSERTION;
constexpr FirstSolutionStrategy_Value FirstSolutionStrategy::PARALLEL_CHEAPEST_INSERTION;
constexpr FirstSolutionStrategy_Value FirstSolutionStrategy::SEQUENTIAL_CHEAPEST_INSERTION;
constexpr FirstSolutionStrategy_Value FirstSolutionStrategy::LOCAL_CHEAPEST_INSERTION;
constexpr FirstSolutionStrategy_Value FirstSolutionStrategy::GLOBAL_CHEAPEST_ARC;
constexpr FirstSolutionStrategy_Value FirstSolutionStrategy::LOCAL_CHEAPEST_ARC;
constexpr FirstSolutionStrategy_Value FirstSolutionStrategy::FIRST_UNBOUND_MIN_VALUE;
constexpr FirstSolutionStrategy_Value FirstSolutionStrategy::Value_MIN;
constexpr FirstSolutionStrategy_Value FirstSolutionStrategy::Value_MAX;
constexpr int FirstSolutionStrategy::Value_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LocalSearchMetaheuristic_Value_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto);
  return file_level_enum_descriptors_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto[1];
}
bool LocalSearchMetaheuristic_Value_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr LocalSearchMetaheuristic_Value LocalSearchMetaheuristic::UNSET;
constexpr LocalSearchMetaheuristic_Value LocalSearchMetaheuristic::AUTOMATIC;
constexpr LocalSearchMetaheuristic_Value LocalSearchMetaheuristic::GREEDY_DESCENT;
constexpr LocalSearchMetaheuristic_Value LocalSearchMetaheuristic::GUIDED_LOCAL_SEARCH;
constexpr LocalSearchMetaheuristic_Value LocalSearchMetaheuristic::SIMULATED_ANNEALING;
constexpr LocalSearchMetaheuristic_Value LocalSearchMetaheuristic::TABU_SEARCH;
constexpr LocalSearchMetaheuristic_Value LocalSearchMetaheuristic::GENERIC_TABU_SEARCH;
constexpr LocalSearchMetaheuristic_Value LocalSearchMetaheuristic::Value_MIN;
constexpr LocalSearchMetaheuristic_Value LocalSearchMetaheuristic::Value_MAX;
constexpr int LocalSearchMetaheuristic::Value_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void FirstSolutionStrategy::InitAsDefaultInstance() {
}
class FirstSolutionStrategy::_Internal {
 public:
};

FirstSolutionStrategy::FirstSolutionStrategy(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:operations_research.FirstSolutionStrategy)
}
FirstSolutionStrategy::FirstSolutionStrategy(const FirstSolutionStrategy& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:operations_research.FirstSolutionStrategy)
}

void FirstSolutionStrategy::SharedCtor() {
}

FirstSolutionStrategy::~FirstSolutionStrategy() {
  // @@protoc_insertion_point(destructor:operations_research.FirstSolutionStrategy)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FirstSolutionStrategy::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FirstSolutionStrategy::ArenaDtor(void* object) {
  FirstSolutionStrategy* _this = reinterpret_cast< FirstSolutionStrategy* >(object);
  (void)_this;
}
void FirstSolutionStrategy::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FirstSolutionStrategy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FirstSolutionStrategy& FirstSolutionStrategy::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FirstSolutionStrategy_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto.base);
  return *internal_default_instance();
}


void FirstSolutionStrategy::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.FirstSolutionStrategy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FirstSolutionStrategy::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FirstSolutionStrategy::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.FirstSolutionStrategy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.FirstSolutionStrategy)
  return target;
}

size_t FirstSolutionStrategy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.FirstSolutionStrategy)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FirstSolutionStrategy::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:operations_research.FirstSolutionStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  const FirstSolutionStrategy* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FirstSolutionStrategy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:operations_research.FirstSolutionStrategy)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:operations_research.FirstSolutionStrategy)
    MergeFrom(*source);
  }
}

void FirstSolutionStrategy::MergeFrom(const FirstSolutionStrategy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:operations_research.FirstSolutionStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FirstSolutionStrategy::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:operations_research.FirstSolutionStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FirstSolutionStrategy::CopyFrom(const FirstSolutionStrategy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.FirstSolutionStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FirstSolutionStrategy::IsInitialized() const {
  return true;
}

void FirstSolutionStrategy::InternalSwap(FirstSolutionStrategy* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FirstSolutionStrategy::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LocalSearchMetaheuristic::InitAsDefaultInstance() {
}
class LocalSearchMetaheuristic::_Internal {
 public:
};

LocalSearchMetaheuristic::LocalSearchMetaheuristic(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:operations_research.LocalSearchMetaheuristic)
}
LocalSearchMetaheuristic::LocalSearchMetaheuristic(const LocalSearchMetaheuristic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:operations_research.LocalSearchMetaheuristic)
}

void LocalSearchMetaheuristic::SharedCtor() {
}

LocalSearchMetaheuristic::~LocalSearchMetaheuristic() {
  // @@protoc_insertion_point(destructor:operations_research.LocalSearchMetaheuristic)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LocalSearchMetaheuristic::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LocalSearchMetaheuristic::ArenaDtor(void* object) {
  LocalSearchMetaheuristic* _this = reinterpret_cast< LocalSearchMetaheuristic* >(object);
  (void)_this;
}
void LocalSearchMetaheuristic::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LocalSearchMetaheuristic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LocalSearchMetaheuristic& LocalSearchMetaheuristic::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LocalSearchMetaheuristic_ortools_2fconstraint_5fsolver_2frouting_5fenums_2eproto.base);
  return *internal_default_instance();
}


void LocalSearchMetaheuristic::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.LocalSearchMetaheuristic)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocalSearchMetaheuristic::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LocalSearchMetaheuristic::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.LocalSearchMetaheuristic)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.LocalSearchMetaheuristic)
  return target;
}

size_t LocalSearchMetaheuristic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.LocalSearchMetaheuristic)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocalSearchMetaheuristic::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:operations_research.LocalSearchMetaheuristic)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalSearchMetaheuristic* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LocalSearchMetaheuristic>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:operations_research.LocalSearchMetaheuristic)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:operations_research.LocalSearchMetaheuristic)
    MergeFrom(*source);
  }
}

void LocalSearchMetaheuristic::MergeFrom(const LocalSearchMetaheuristic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:operations_research.LocalSearchMetaheuristic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LocalSearchMetaheuristic::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:operations_research.LocalSearchMetaheuristic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalSearchMetaheuristic::CopyFrom(const LocalSearchMetaheuristic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.LocalSearchMetaheuristic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalSearchMetaheuristic::IsInitialized() const {
  return true;
}

void LocalSearchMetaheuristic::InternalSwap(LocalSearchMetaheuristic* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LocalSearchMetaheuristic::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace operations_research
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::operations_research::FirstSolutionStrategy* Arena::CreateMaybeMessage< ::operations_research::FirstSolutionStrategy >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::FirstSolutionStrategy >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::LocalSearchMetaheuristic* Arena::CreateMaybeMessage< ::operations_research::LocalSearchMetaheuristic >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::LocalSearchMetaheuristic >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
